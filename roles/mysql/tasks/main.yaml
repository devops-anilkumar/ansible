- name: copying mysql repo
  ansible.builtin.copy:
    src: mysql.repo
    dest: /etc/yum.repos.d/mysql.repo

- name: Install mysql
  ansible.builtin.yum:
    name: 
     - mysql-community-server
     - MySQL-python
    state: present

- name: starting mysql
  ansible.builtin.service:
    name: mysqld
    state: started
    enabled: yes

- name: checking the default password
  block:
    - name: Get MySQL version with non-default credentials
      community.mysql.mysql_info:
        login_user: root
        login_password: RoboShop@1
        filter: version

  rescue:
    - name: loading the file from the remote node
      ansible.builtin.slurp:
        src: /var/log/mysqld.log
        register: mysql_log

    - name: Fetching the password and assigning it to a variable
      ansible.builtin.set_fact:  
        DEFAULT_PASSWORD: "{{ mysql_log['content'] | b64decode | regex_findall('.*temporary password.*') | join(' ') | split(' ') | last }}"

    - name: changing mysql password
      ansible.builtin.shell: echo "ALTER USER 'root'@'localhost' IDENTIFIED BY 'RoboShop@1';" | mysql --connect-expired-password -uroot -p"{{DEFAULT_PASSWORD}}"

- name: removing the password validate plugin
  ansible.builtin.shell: echo "uninstall plugin validate_password;" | mysql -uroot -pRoboShop@1
  ignore_errors: yes

- name: download the schema
  ansible.builtin.include_role:
    name: common
    tasks_from: download

- name: injecting the schema
  community.mysql.mysql_db:
    state: import
    name: all
    target: /tmp/mysql-main/shipping.sql
    login_user: root
    login_password: RoboShop@1










# if any of the task fails in the block(group of tasks) , then only rescue task should run.

# - name: Print returned information
#   ansible.builtin.debug:
#     msg: "{{ mysql_log['content'] | b64decode | regex_findall('.*temporary password.*') | join(' ') | split(' ') | last }}" 

# - name: declearing the facts
#   ansible.builtin.set_facts:  
#     DEFAULT_PASSWORD: "{{}}"